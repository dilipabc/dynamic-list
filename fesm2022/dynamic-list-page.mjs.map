{"version":3,"file":"dynamic-list-page.mjs","sources":["../../../projects/dynamic-list/src/lib/dynamic-list.service.ts","../../../projects/dynamic-list/src/lib/pagination/pagination.component.ts","../../../projects/dynamic-list/src/lib/pagination/pagination.component.html","../../../projects/dynamic-list/src/lib/sort.directive.ts","../../../projects/dynamic-list/src/lib/dynamic-list.component.ts","../../../projects/dynamic-list/src/lib/dynamic-list.module.ts","../../../projects/dynamic-list/src/public-api.ts","../../../projects/dynamic-list/src/dynamic-list-page.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DynamicListService {\n\n  constructor() { }\n}\n","import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.css']\n})\nexport class PaginationComponent implements OnInit {\n  @Input() current: number = 0\n  @Input() total: number = 0\n\n  @Output() goTo: EventEmitter<number> = new EventEmitter<number>();\n  @Output() next: EventEmitter<number> = new EventEmitter<number>();\n  @Output() previous: EventEmitter<number> = new EventEmitter<number>();\n  public pages: number[] = [];\n  constructor() { }\n\n  ngOnInit(): void { }\n\n  public onGoTo(page: number): void {\n    this.goTo.emit(page)\n  }\n  public onNext(): void {\n    this.next.emit(this.current)\n  }\n  public onPrevious(): void {\n    this.previous.next(this.current)\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (\n      (changes['current'] && changes['current'].currentValue) ||\n      (changes['total'] && changes['total'].currentValue)\n    ) {\n      this.pages = this.getPages(this.current, this.total);\n    }\n  }\n\n  private getPages(current: number, total: number): number[] {\n    if (total <= 7) {\n      return [...Array(total).keys()].map(x => ++x)\n    }\n    if (current > 5) {\n      if (current >= total - 4) {\n        return [1, total - 5, total - 4, total - 3, total - 2, total - 1, total]\n      } else {\n        return [1, current - 2, current - 1, current, current + 1, current + 2, total]\n      }\n    }\n    return [1, 2, 3, 4, 5, 6, total]\n  }\n}\n","<div class=\"container\">\n  <div class=\"pagination\">\n    <li *ngIf=\"current > 1\"><a href=\"javascript:void(0)\" [attr.aria-disabled]=\"current === 1\"\n        (click)=\"onPrevious()\">&laquo;</a></li>\n\n    <li *ngFor=\"let page of pages;\"><a href=\"javascript:void(0)\" [attr.aria-current]=\"page === current ? 'page' : null\"\n        [attr.aria-label]=\"\n          page === current ? 'Current Page, Page ' + page : 'Go to Page ' + page\n        \" [class.active]=\"page == current\" tabindex=\"0\" (click)=\"onGoTo(page)\"\n        (keyup.enter)=\"onGoTo(page)\">{{page}}</a></li>\n\n    <li *ngIf=\"current < total\"><a href=\"javascript:void(0)\" aria-label=\"Go To Next Page\"\n        [attr.aria-disabled]=\"current === total\" (click)=\"onNext()\">&raquo;</a></li>\n  </div>","import { Directive, ElementRef, EventEmitter, HostListener, Input, Output, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appSort]'\n})\nexport class SortDirective {\n\n  @Input() sortKey: string = '';\n  @Output() sorted = new EventEmitter<any[]>();\n\n  private sortDirection: boolean = true;  // true for ascending, false for descending\n\n  constructor(private el: ElementRef, private renderer: Renderer2) { }\n\n  @HostListener('click')\n  sortData() {   \n\n    this.sortDirection = !this.sortDirection;  // toggle the direction\n\n    let returnData:any = {\n      sortKey : this.sortKey,\n      sortDirection : this.sortDirection\n    }\n\n    this.sorted.emit(returnData);\n    this.setArrowIcon();\n  }\n\n  private setArrowIcon() {\n    const upArrow = '\\u25B2';   // Unicode for up arrow\n    const downArrow = '\\u25BC'; // Unicode for down arrow\n\n    //console.log(this.el.nativeElement);\n\n    // Remove existing arrow\n    this.renderer.setProperty(this.el.nativeElement, 'innerHTML', this.el.nativeElement.innerHTML.replace(upArrow, '').replace(downArrow, ''));\n\n    // Add new arrow\n    this.renderer.appendChild(this.el.nativeElement, this.renderer.createText(this.sortDirection ? downArrow : upArrow));\n  }\n}\n","import { Component, Input, OnInit, EventEmitter, Output, OnChanges, SimpleChanges } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DynamicKeyInterface, ActionMenus, ItemTitles, PaginationItems, FunctionEnable } from './dataType';\n\n@Component({\n  selector: 'lib-dynamic-list',\n  template: `\n    <div>\n      <h2 class=\"mb-4\">{{title}}</h2>\n      <ng-container *ngIf=\"funEnable[0].searching == true\">\n        <form [formGroup]=\"searchForm\" (ngSubmit)=\"search()\">\n          <div class=\"row m-2\">\n              <div class=\"col-lg-3\">\n                  <div class=\"input-group\">\n                      <label for=\"searchBy\" class=\"input-group-addon mt-1 m-1\" >Search By : </label>\n                      <select id=\"searchBy\" formControlName=\"searchBy\" class=\"form-control\">\n                          <option value=\"\">Select</option>\n                          <ng-container *ngFor=\"let itemTitle of itemTitles\">\n                            <option *ngIf=\"itemTitle.isSearch == true\"  value=\"{{itemTitle.key}}\">{{itemTitle.value}}</option>\n                          </ng-container>                        \n                      </select>\n                      <div class=\"validation\" *ngIf=\"searchBy?.invalid && (searchBy?.dirty || searchBy?.touched)\">\n                          <small *ngIf=\"searchBy?.errors?.['required']\">Search by is required.</small>\n                      </div>\n                  </div>\n              </div>\n              <div class=\"col-lg-6\">\n                  <div class=\"input-group\">\n                      <label for=\"searchTerm\" class=\"input-group-addon mt-1 m-1\">Search Key : </label>\n                      <input id=\"searchTerm\" formControlName=\"searchTerm\" placeholder=\"Search\" class=\"form-control\"/>\n                      <div class=\"validation\" *ngIf=\"searchTerm?.invalid && (searchTerm?.dirty || searchTerm?.touched)\">\n                          <small *ngIf=\"searchTerm?.errors?.['required']\">Search key is required.</small>\n                      </div>\n                  </div>\n              </div>\n              <div class=\"col-lg-3\">\n                  <div class=\"form-group mt-1\">\n                      <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"searchForm.invalid\">Search</button>\n                      &nbsp;&nbsp;\n                      <button type=\"button\" class=\"btn btn-secondary\" (click)=\"reset()\">Reset</button>\n\n                  </div>\n              </div>\n          </div>    \n        </form>\n      </ng-container>\n      <div class=\"table-responsive\">\n          <table class=\"table table-striped\" #container>\n              <thead>\n                  <tr>\n                      <ng-container *ngIf=\"funEnable[0].sorting == true\">\n                        <th scope=\"col\" *ngFor=\"let itemTitle of itemTitles\">\n                            <span appSort sortKey=\"{{itemTitle.key}}\" (sorted)=\"sort($event)\" class=\"tableHead\">\n                              {{itemTitle?.value}}\n                            </span>\n                        </th>\n                      </ng-container>\n                      <ng-container *ngIf=\"funEnable[0].sorting == false\">\n                        <th scope=\"col\" *ngFor=\"let itemTitle of itemTitles\">\n                              <span class=\"tableHead\">\n                                {{itemTitle?.value}}\n                              </span>\n                          </th>\n                      </ng-container>\n                      <th scope=\"col\" style=\"text-align:center\">Actions</th>\n                  </tr>\n              </thead>\n              <tbody>\n                  <tr *ngFor=\"let item of items; let  i = index\">\n                      <td *ngFor=\"let itemTitle of itemTitles\">\n                          {{printTdValues(item, itemTitle.key)}}\n                      </td>\n                      <td>\n                          <nav class=\"nav\">\n                              <ng-container *ngFor=\"let actionMenu of actionMenus\">\n                                  <ng-container *ngIf=\"actionMenu.isConfirm == true\">\n                                      <a class=\"nav-link\" href=\"javascript:void(0);\"\n                                          (click)=\"deleteItems(returnDeleteItemsId(item, actionMenu.fieldName))\"\n                                          title=\" {{actionMenu.name}}\">\n                                          <ng-container *ngIf=\"actionMenu.iconUrl\">\n                                          <img src=\"{{actionMenu.iconUrl}}\" width=\"50px\" height=\"50px\" alt=\"{{actionMenu.name}}\"/>\n                                          </ng-container>\n                                          <ng-container  *ngIf=\"actionMenu.iconUrl == ''\" >\n                                            {{actionMenu.name}}\n                                          </ng-container>\n                                      </a>\n                                  </ng-container>\n\n                                  <ng-container *ngIf=\"actionMenu.isConfirm == false\">\n                                      <a class=\"nav-link\" href=\"javascript:void(0);\"\n                                          routerLink=\"{{actionMenu.redirectUrl}}{{returnDeleteItemsId(item, actionMenu.fieldName)}}\"\n                                          title=\" {{actionMenu.name}}\">\n                                          <ng-container *ngIf=\"actionMenu.iconUrl\">\n                                          <img src=\"{{actionMenu.iconUrl}}\" width=\"50px\" height=\"50px\" alt=\"{{actionMenu.name}}\"/>\n                                          </ng-container>\n                                          <ng-container  *ngIf=\"actionMenu.iconUrl == ''\" >\n                                            {{actionMenu.name}}\n                                          </ng-container>\n\n                                      </a>\n                                  </ng-container>\n                              </ng-container>\n                          </nav>\n                      </td>\n                  </tr>\n                  <tr *ngIf=\"items.length == 0\">\n                      <td class=\"norecord\" [attr.colspan]=returnLength(itemTitles)>No record found.</td>\n                  </tr>\n              </tbody>\n          </table>\n          <div *ngIf=\"funEnable[0].pagination == true\">\n              <div class=\"pagination\">\n                  <span *ngIf=\"paginationItems.totalPages > 1\">\n                      <app-pagination [current]=\"paginationItems.currentPage\" [total]=\"paginationItems.totalPages\" (goTo)=\"goToPage($event)\"\n                          (next)=\"nextPage($event)\" (previous)=\"prevPage($event)\"></app-pagination>\n                  </span>\n              </div>\n          </div>\n      </div>\n  </div>\n  `,\n  styles: [\n    `\n    .validation {\n      width: 100%;\n      text-align: end;\n      color: #f00;\n    }\n\n    .norecord {\n      text-align: center;\n      height: 100px;\n      padding-top: 35px;\n    }\n\n    table {\n      width: 100%;\n      border-collapse: collapse;\n    }\n\n    th, td {\n      border: 1px solid #ddd;\n      padding: 8px;\n    }\n\n    th {\n      cursor: pointer;\n      background-color: #f2f2f2;\n      user-select: none;\n    }\n\n    th:hover {\n      background-color: #ddd;\n    }\n\n    .pagination {\n      display: block;\n    }\n    .tableHead  {\n      width: 100% ! important;      \n      display: inline-block;\n    }\n\n\n    `\n  ]\n})\nexport class DynamicListComponent implements OnInit, OnChanges {\n\n\n\n  @Input() title: string = 'Dynamic List';\n\n  @Input() itemTitles: Array<ItemTitles> = [];\n  @Input() paginationItems: PaginationItems | any;\n  @Input() actionMenus: Array<ActionMenus> = [];\n  @Input() items: Array<DynamicKeyInterface> = [];\n  @Input() funEnable : Array<FunctionEnable> = [];\n\n\n  @Output() onGoPage: EventEmitter<number> = new EventEmitter<number>();\n  @Output() next: EventEmitter<number> = new EventEmitter<number>();\n  @Output() prev: EventEmitter<number> = new EventEmitter<number>();\n\n  @Output() toDel: EventEmitter<number> = new EventEmitter<number>();\n  @Output() toSort: EventEmitter<number> = new EventEmitter<number>();\n  @Output() toSearch: EventEmitter<number> = new EventEmitter<number>();\n  @Output() toReset: EventEmitter<number> = new EventEmitter<number>();\n\n  searchForm: FormGroup;\n\n  currentPage: number = 1;\n  itemsPerPage: number = 10;\n  totalPages: number = 0;\n\n  sortOrder: string = 'asc';\n  sortBy: string = '';\n\n  constructor(private fb: FormBuilder) {\n    this.searchForm = this.fb.group({\n      searchTerm: ['', Validators.required],\n      searchBy: ['', Validators.required]\n    });\n  }\n\n  ngOnInit() {\n    //console.log(this.items)\n\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n\n    //console.log(changes);\n  }\n\n  sort(sortedData: any) {\n    this.toSort.emit(sortedData);\n  }\n\n  search() {\n    this.toSearch.emit(this.searchForm.value);\n  }\n\n  reset() {\n    this.searchForm.reset();\n    this.toReset.emit(this.searchForm.value);\n  }\n\n  returnLength(items: any) {\n    return items.length + 1;\n  }\n\n  goToPage(pageNo: number) {\n    this.onGoPage.emit(pageNo);\n  }\n\n  nextPage(pageNo: number) {\n    this.next.emit(pageNo);\n  }\n\n  prevPage(pageNo: number) {\n    this.prev.emit(pageNo);\n  }\n\n\n  get searchTerm() {\n    return this.searchForm.get('searchTerm');\n  }\n\n  get searchBy() {\n    return this.searchForm.get('searchBy');\n  }\n\n\n  public deleteItems(delId: number): void {\n    if (window.confirm('Are you sure you want to delete this user?')) {\n      this.toDel.emit(delId);\n    }\n  }\n\n  returnDeleteItemsId(item: any, key: any) {\n    if (item[key]) {\n      return item[key];\n    } else {\n      return;\n    }\n  }\n\n  printTdValues(item: any, key: string): void {\n\n    let position = key.indexOf(\".\"); \n    if (position == -1) {\n      if (item[key]) {\n        return item[key];\n      } else {\n        return;\n      }\n    }else{\n      const myArray = key.split(\".\");\n      let result =  Array.isArray(item[myArray[0]]);\n      if(result == true){\n        \n        if(myArray.length == 2){\n          return item[myArray[0]][0][myArray[1]];\n        }else if(myArray.length == 3){\n          return item[myArray[0]][0][myArray[1]][myArray[2]];\n        }else if(myArray.length == 4){\n          return item[myArray[0]][0][myArray[1]][myArray[2]][myArray[3]];\n        }\n      }else{\n        if(myArray.length == 2){\n          return item[myArray[0]][myArray[1]];\n        }else if(myArray.length == 3){\n          return item[myArray[0]][myArray[1]][myArray[2]];\n        }else if(myArray.length == 4){\n          return item[myArray[0]][myArray[1]][myArray[2]][myArray[3]];\n        }\n      }\n    }\n  }\n\n\n}","import { NgModule } from '@angular/core';\nimport { DynamicListComponent } from './dynamic-list.component';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {PaginationComponent} from './pagination/pagination.component';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport {RouterModule} from '@angular/router';\nimport { SortDirective } from './sort.directive';\n\n\n@NgModule({\n  declarations: [DynamicListComponent, PaginationComponent, SortDirective],\n  imports: [CommonModule, ReactiveFormsModule, HttpClientModule, RouterModule],\n  exports: [DynamicListComponent]\n})\nexport class DynamicListModule { }","/*\n * Public API Surface of dynamic-list\n */\n\nexport * from './lib/dynamic-list.service';\nexport * from './lib/dynamic-list.component';\nexport * from './lib/dynamic-list.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i2","i4.PaginationComponent","i5.SortDirective"],"mappings":"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"}